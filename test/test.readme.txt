■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
■
■  テスト
■

■
■  テスト方針
■

・重要でハズせないポイントであるか手間がそれほどかからない範囲でのテストを
　実施する。

　→組み合わせによるパターン数を増やしてもテストパターンあたりのバグの検出
　　率が下がり非効率になっていくのであまり組み合わせによるテストパターン増
　　やさないこと。ただし一度問題が起きたパターンや、調査の為に増やしたパ
　　ターンを後から積極的に削る必要はなし。

・手間がそれほどかからない範囲でのみ自動化を検討・実施。


■
■  テスト方法
■

・auto.test.cmd を使った自動テスト

　→テストが自動なのであって対象となるのは手動ビルド。

　・ auto.test.cmd を実行後の result と result.expected のディレクトリ
　　比較し一致することを確認する。

　・ZIPに関してはアーカイブのバイナリが必ず異なると判定されてしまうが
　　中身のファイル群が同一であれば良い。

　・差異が検出された場合には auto.test.cmd 内のコメントを参考にバグが
　　検出されたのか、それとも auto.test.cmd や result.expected を修正
　　するべきなのかを判断し対処する。

・manual.test0.cmd を使った手動テスト

　→テストが手動なのであって対象となるのは自動ビルド。

　・テスト手順＆チェック内容
　　1. manual.test0.cmd を実行し初回のビルドが完了した後に待機状態に
　　　 なることを確認。
　　2. 待機状態で ".\test snap\src\dummy.cpp" を編集し保存するとビル
　　　 ドが始まることを確認。
　　　 →編集・保存はファイルサイズやファイルのタイムスタンプが変わ
　　　 　る操作であればなんでもよい。
　　3. ビルド完了後に待機状態になることを確認。
　　4. [2.]-[3.]を2〜3回繰り返す。
    5. ".\test snap\snapshot\passed.compile\passed.test\最終日.lnk"
	　 を開き、そのリンク先が適切な日付ディレクトリになっていること
	　 と、そのディレクトリ内にビルドが実行された分だけ時刻ZIPがで
	　 きていることを確認。
	　 →ZIPの中身については auto.test.cmd でカバーされているので
	　 　ここで改めて確認する必要はない。	　　

・manual.test1.cmd を使った手動テスト

　→テストが手動なのであって対象となるのは自動ビルド。

　・テスト手順＆チェック内容
　　1. manual.test1.cmd を実行し初回のビルドが完了した後に待機状態に
　　　 なることを確認。
　　2. 待機状態で ".\test snap\src\dummy.cpp" を編集し保存するとビル
　　　 ドが始まることを確認。
　　　 →編集・保存はファイルサイズやファイルのタイムスタンプが変わ
　　　 　る操作であればなんでもよい。
　　3. ビルド完了後に待機状態になることを確認。
	　 → manual.test0.cmd と被るので manual.test1.cmd でのテストは
	　 　ここまででよい。


■
■  後片付け
■

clear.test.cmd を実行するとテストコマンドによって作成されたディレク
トリおよびファイルがすべて削除されます。


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
■
■  End Of Document
■
